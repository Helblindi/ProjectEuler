"""
The four adjacent digits in the 1000-digit number that
have the greatest product are 9 x 9 x 8 x 9 = 5832.

Find the thirteen adjacent digits in the 1000-digit
number that have the greatest product.  What is the
value of this product?
"""


number = '73167176531330624919225119674426574742355349194934969835203' \
         '12774506326239578318016984801869478851843858615607891129494' \
         '95459501737958331952853208805511125406987471585238630507156' \
         '93290963295227443043557668966489504452445231617318564030987' \
         '11121722383113622298934233803081353362766142828064444866452' \
         '38749303589072962904915604407723907138105158593079608667017' \
         '24271218839987979087922749219016997208880937766572733300105' \
         '33678812202354218097512545405947522435258490771167055601360' \
         '48395864467063244157221553975369781797784617406495514929086' \
         '25693219784686224828397224137565705605749026140797296865241' \
         '45351004748216637048440319989000889524345065854122758866688' \
         '11642717147992444292823086346567481391912316282458617866458' \
         '35912456652947654568284891288314260769004224219022671055626' \
         '32111110937054421750694165896040807198403850962455444362981' \
         '23098787992724428490918884580156166097919133875499200524063' \
         '68991256071760605886116467109405077541002256983155200055935' \
         '72972571636269561882670428252483600823257530420752963450'

largest = 0
for it in range(0, len(number) - 12):
    a = int(number[it])
    b = int(number[it + 1])
    c = int(number[it + 2])
    d = int(number[it + 3])
    e = int(number[it + 4])
    f = int(number[it + 5])
    g = int(number[it + 6])
    h = int(number[it + 7])
    i = int(number[it + 8])
    j = int(number[it + 9])
    k = int(number[it + 10])
    l = int(number[it + 11])
    m = int(number[it + 12])

    multiple = a*b*c*d*e*f*g*h*i*j*k*l*m

    if multiple > largest:
        largest = multiple

print(largest)

